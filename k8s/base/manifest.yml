apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nodejs-template
  name: nodejs-template
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  selector:
    matchLabels:
      app: nodejs-template
  template:
    metadata:
      labels:
        app: nodejs-template
    spec:
      containers:
        - image: docker.pkg.github.com/sorc3r3r/nodejs-template/nodejs-template:latest
          name: nodejs-template
          livenessProbe:
            httpGet:
              path: /healthz
              port: 1337
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 1337
            initialDelaySeconds: 15
            periodSeconds: 10
          env:
            - name: APP_HOST
              value: "0.0.0.0"
            - name: APP_PORT
              value: "1337"
      imagePullSecrets:
        - name: githubdockercred
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: nodejs-template-service
  labels:
    app: nodejs-template-service
spec:
  type: ClusterIP
  selector:
    app: nodejs-template
  ports:
    - port: 80
      targetPort: 1337
      name: http

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: nodejs-template-ingress
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
